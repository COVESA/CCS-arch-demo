# This should be defined in the calling makefile
# The variable set only in the case it was not set before
IMAGE_NAME ?= UNDEF--do-not-run-this-file-directly
CONTAINER_NAME ?= UNDEF--do-not-run-this-file-directly
CONTAINER_HOSTNAME ?= UNDEF--do-not-run-this-file-directly

# Separate shared network between containers
NETWORK = ovds_network

# Choose docker or podman
FRONTEND=sudo podman
FRONTEND=docker

# Define path to common data dir
# https://stackoverflow.com/questions/18136918/how-to-get-current-relative-directory-of-your-makefile
THIS_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
SHARED_DATA_DIR = ${THIS_DIR}/../data

default:
	@echo "make [build|buildnew|run|clean|logs|shell|stop|test|kill|rm|rmi]"

build:
	${FRONTEND} build --tag=${IMAGE_NAME} . \

buildnew:
	${FRONTEND} build --no-cache --tag=${IMAGE_NAME} .

datadir:
	# Just to ensure bind mounted host data dir exists
	mkdir -p "${SHARED_DATA_DIR}"

network:
	# Just to ensure network is created first
	${FRONTEND} network ls | fgrep -w ${NETWORK} || ${FRONTEND} network create ${NETWORK}

# Run default CMD (from Dockerfile), or whatever is specified if $CMD # variable was set
run: datadir network
	echo ${SHARED_DATA_DIR}
	${FRONTEND} run -ti -h "${CONTAINER_HOSTNAME}" ${PORTMAPS} -d --network=${NETWORK} -v "${SHARED_DATA_DIR}:/data:z" --name=${CONTAINER_NAME} ${IMAGE_NAME} ${CMD}

clean: kill rm rmi

logs:
	${FRONTEND} logs -f ${CONTAINER_NAME}

shell:
	${FRONTEND} exec -it ${CONTAINER_NAME} /bin/bash

stop:
	${FRONTEND} stop ${CONTAINER_NAME}

test:
	${FRONTEND} exec -t ${CONTAINER_NAME} ./test.sh

kill:
	@${FRONTEND} kill ${CONTAINER_NAME} 2>/dev/null || echo "Container seems not running"

rm: kill  # always kill, then rm
	@${FRONTEND} rm -v ${CONTAINER_NAME} 2>/dev/null || echo "Container seems removed already"

rmi:
	@${FRONTEND} rmi ${IMAGE_NAME} 2>/dev/null || echo "Image seems removed already"

